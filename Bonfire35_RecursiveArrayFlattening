/*
Bonfire: Steamroller
Difficulty:â€‰
Flatten a nested array. You must account for varying levels of nesting.

Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.

Here are some helpful links:

Array.isArray()
*/

function steamroller(arr) {
  // I'm a steamroller, baby
  
  if (!arr.length) return [];
  var flattened = [];
  
  function flattenRec(arrIn) {
    for (var i=0; i<arrIn.length; i++) {
      var elem = arrIn[i];
      if (Array.isArray(elem)) {
        flattenRec(elem);
      }
      else {
        flattened.push(elem);
      }
    }
  }
  flattenRec(arr);
  return flattened;
}
  
/*
Test
steamroller([1, [2], [3, [[4]]]]);
assert.deepEqual(steamroller([[['a']], [['b']]]), ['a', 'b'], 'should flatten nested arrays');
assert.deepEqual(steamroller([1, [2], [3, [[4]]]]), [1, 2, 3, 4], 'should flatten nested arrays');
assert.deepEqual(steamroller([1, [], [3, [[4]]]]), [1, 3, 4], 'should work with empty arrays');
assert.deepEqual(steamroller([1, {}, [3, [[4]]]]), [1, {}, 3, 4], 'should work with actual objects');
*/

