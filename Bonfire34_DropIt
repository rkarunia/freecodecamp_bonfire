/*
Bonfire: Drop it
Difficulty:â€‰
Drop the elements of an array (first argument), starting from the front, until the predicate (second argument) returns true.

Remember to use Read-Search-Ask if you get stuck. Try to pair program. Write your own code.

Here are some helpful links:

Arguments object
Array.shift()
*/

function drop(arr, func) {
  // Drop them elements.
  while (arr.length) {
    if (!func(arr[0])) {
      arr.shift();
    }
    else {
      break;
    }
  }
  return arr;
}

/*
Test
drop([1, 2, 3], function(n) {return n < 3; });
expect(drop([1, 2, 3, 4], function(n) {return n >= 3; })).to.eqls([3, 4]);
expect(drop([1, 2, 3], function(n) {return n > 0; })).to.eqls([1, 2, 3]);
expect(drop([1, 2, 3, 4], function(n) {return n > 5; })).to.eqls([]);
*/

